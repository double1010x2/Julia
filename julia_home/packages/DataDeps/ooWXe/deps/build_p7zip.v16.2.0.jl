using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    ExecutableProduct(prefix, "7z", :p7zip_exe),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaBinaryWrappers/p7zip_jll.jl/releases/download/p7zip-v16.2.0+4"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    # MacOS(:aarch64) => ("$bin_prefix/p7zip.v16.2.0.aarch64-apple-darwin.tar.gz", "4394e087868097772a0f9a13c9069522192dc9488d36fbf37f37b8328ad9b031"),
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/p7zip.v16.2.0.aarch64-linux-gnu.tar.gz", "7c6134329060d35ba4ec301ef7b2d9a906928f428ca9c683a0e4630ee66d54f8"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/p7zip.v16.2.0.aarch64-linux-musl.tar.gz", "9d20b930c0fa8e833103dae2c7dae82072f2a20f2a669945a08a8099e519138f"),
    # Linux(:armv6l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/p7zip.v16.2.0.armv6l-linux-gnueabihf.tar.gz", "e18ddbda3e1327806aab32ffb7732355e297995daa3e94835ed299ef6d7bbac6"),
    # Linux(:armv6l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/p7zip.v16.2.0.armv6l-linux-musleabihf.tar.gz", "6423ead668273a62908cb076ec884f7793b30380fb7ca9c1c97dbffdfafc0172"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/p7zip.v16.2.0.armv7l-linux-gnueabihf.tar.gz", "5f9372c5e31142e3f48b74d4c402298cd5ad49c6f6b965e14e8661736a0c78ef"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/p7zip.v16.2.0.armv7l-linux-musleabihf.tar.gz", "9cb74d0abf2989e480d93e1e190804db5bf99beb73b7ac8e13e54e4e2fb1160f"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/p7zip.v16.2.0.i686-linux-gnu.tar.gz", "996bf3c0e77060e90cbd9ffe8d6c34be57bb9e9c81f992b021cf73247fedf75e"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/p7zip.v16.2.0.i686-linux-musl.tar.gz", "4fe7c178f3af5036ff7cfccee2bcf81f7cf7edffbee2dd7fc2ee5252c3b34f90"),
    Windows(:i686) => ("$bin_prefix/p7zip.v16.2.0.i686-w64-mingw32.tar.gz", "ffc60cd7874367e3fd0422bea41c3709ccd5ccf379efb6125217cb45f7dfc140"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/p7zip.v16.2.0.powerpc64le-linux-gnu.tar.gz", "c856c51cf660baa8dd98d8c459878ed41daa381b49882683146116a40d57c567"),
    MacOS(:x86_64) => ("$bin_prefix/p7zip.v16.2.0.x86_64-apple-darwin.tar.gz", "77be1047b823c791fe82602a33b7733641bbcad598c31d534a9a16ea3bd34357"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/p7zip.v16.2.0.x86_64-linux-gnu.tar.gz", "653030cae24b5c8e0ac6c35e230049a93b114bf82a884b2df280796a5f1c89d5"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/p7zip.v16.2.0.x86_64-linux-musl.tar.gz", "740b8e9adde42dae2261134cbb2d4c8a75d445dd3204e255122587b4a0b18634"),
    FreeBSD(:x86_64) => ("$bin_prefix/p7zip.v16.2.0.x86_64-unknown-freebsd.tar.gz", "1c14bab0114c994f2e5d5ebf1dd58856dcc0cec647349bae3fa31a1cf6e3d5d1"),
    Windows(:x86_64) => ("$bin_prefix/p7zip.v16.2.0.x86_64-w64-mingw32.tar.gz", "3dac1d8619dadd2112709c93a72ea6e6eb97f6ad957b17efa6cd3347dbb5c95d"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
